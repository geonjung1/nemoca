<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="caferanking">
	<select id="cafeRankingList" parameterType="string" resultType="caferanking">
		SELECT C.*
		  FROM (
		         SELECT C.*
		              , RANK() OVER(ORDER BY C.LIKE_COUNT DESC, C.C_NAME) AS CAFE_LIKE_RANK -- 카페별 좋아요 숫자를 통한 랭킹 계산
		           FROM (
		                  SELECT C_NO
		                       , C_NAME
		                       , C_ADDR
		                       , C_LOC
		                       , C_TEL
		                       , C_IMG1
		                       , C_IMG2
		                       , C_IMG3
		                       , C_MENU1
		                       , C_MENU2
		                       , C_MENU3
		                       , C_JOIN_DATE
		                       , C_DEL
		                       , C_DEL_DATE
		                       , C_READCOUNT
		                       , USER_ID
		                       
		                       , NVL((
		                               SELECT COUNT(1)
		                                 FROM CAFE_LIKE
		                                WHERE C_NO = CAFE.C_NO
		                             ),0) AS LIKE_COUNT -- 좋아요 숫자 서브쿼리
		                             
		                       , CASE WHEN EXISTS (
		                                            SELECT 1
		                                              FROM CAFE_LIKE
		                                             WHERE USER_ID = #{user_id}
		                                               AND C_NO = CAFE.C_NO
		                                          ) THEN 'Y' ELSE 'N' END AS LIKE_YN -- 접속 사용자가 좋아요를 눌렀는지 여부(Y/N)
		                                          
		                       , CASE WHEN (SELECT COUNT(1) FROM CAFE_STAR WHERE C_NO = CAFE.C_NO) = 0
		                                   THEN '미평가'
		                              ELSE TRIM(TO_CHAR( (SELECT AVG(GRADE) FROM CAFE_STAR WHERE C_NO = CAFE.C_NO), '9.9' ))
		                         END AS STAR -- 평점 계산
		                    FROM CAFE
		                   WHERE C_DEL = 'N'
		                ) C
		       ) C
		 ORDER BY C.LIKE_COUNT DESC, C.C_NAME
	</select>
</mapper>