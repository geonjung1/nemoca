<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="caferanking">
	<select id="cafeRankingList" parameterType="cafe" resultType="cafe">
		SELECT C.*
		  FROM (
		         SELECT C.*
		              , RANK() OVER(ORDER BY C.LIKE_COUNT DESC, C.C_NAME) AS CAFE_LIKE_RANK -- 카페별 좋아요 숫자를 통한 랭킹 계산
		           FROM (
		                  SELECT CAFE.*
		                       , NVL((
		                               SELECT COUNT(1)
		                                 FROM CAFE_LIKE
		                                WHERE C_NO = CAFE.C_NO
		                             ),0) AS LIKE_COUNT -- 좋아요 숫자 서브쿼리
		                             
		                       , CASE WHEN EXISTS (
		                                            SELECT 1
		                                              FROM CAFE_LIKE
		                                             WHERE USER_ID = #{user_id}
		                                               AND C_NO = CAFE.C_NO
		                                          ) THEN 'y' ELSE 'n' END AS LIKE_YN -- 접속 사용자가 좋아요를 눌렀는지 여부(Y/N)
		                                          
		                       , CASE WHEN (SELECT COUNT(1) FROM CAFE_RE WHERE C_NO = CAFE.C_NO AND CR_DEL = 'n') = 0
		                                   THEN '미평가'
		                              ELSE TRIM(TO_CHAR( (SELECT AVG(CR_GRADE) FROM CAFE_RE WHERE C_NO = CAFE.C_NO AND CR_DEL = 'n'), '9.9' ))
		                         END AS STAR -- 평점 계산
		                    FROM CAFE
		                   WHERE C_DEL = 'n'
		                  <if test="c_type != null and c_type != 'ALL'">
		                     AND C_TYPE = #{c_type}
		                  </if>
		                ) C
		       ) C
		 ORDER BY C.CAFE_LIKE_RANK, C.C_NAME
	</select>
	
	
	<select id="cafeRankingList222" parameterType="cafe" resultType="cafe">
		select c.* from (select c.*, rank() over(order by c.like_count desc, c.c_name) as cafe_like_rank from 
		    (select cafe.*, nvl((select count(1) from cafe_like where c_no = cafe.c_no),0) as like_count, 
		    case when exists (select 1 from cafe_like where user_id = #{user_id} and c_no = cafe.c_no) then 'y' else 'n' end as like_yn, 
		    case when (select count(1) from cafe_re where c_no = cafe.c_no and cr_del = 'n') = 0 then '미평가' else 
		    trim(to_char( (select avg(cr_grade) from cafe_re where c_no = cafe.c_no and cr_del = 'n'
		    <if test="c_type != null and c_type != 'ALL'">and c_type = #{c_type}</if>), '9.9' )) end as star 
		    from cafe where c_del = 'n') c) c order by c.cafe_like_rank, c.c_name
	</select>
</mapper>